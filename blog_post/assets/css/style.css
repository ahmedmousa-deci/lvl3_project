/* importing icons lib */

@import url(../bootstrap-icons-1.11.3/font/bootstrap-icons.min.css);

:root {
  /* define site colors */
  --color-1: rgb(24, 28, 20);
  --color-2: rgb(60, 61, 55);
  --color-3: rgb(105, 117, 101);
  --color-4: rgb(236, 223, 204);
}

/* importing fonts */

@font-face {
  font-family: "Monomakh";
  src: url(../fonts/Monomakh-Regular.ttf);
}

@font-face {
  font-family: "NewRocker";
  src: url(../fonts/NewRocker-Regular.ttf);
}


/* define standers for every element */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  border: 0;
  color: var(--color-4);
}

html,
body {
  min-height: 100%;
  background: var(--color-1);
  font-family: "Monomakh", sans-serif;
  font-size: 22px;
  /* "scroll-behavior: smooth" is used for smooth scrolling for anchor links */
  scroll-behavior: smooth;
}


h1 {
  font-size: 2em;
}

h2 {
  font-size: 1.5em;
}

h3 {
  font-size: 1.17em;
}

h1,
h2,
h3 {
  font-family: "NewRocker";
}


/* make custom text selection */

*::selection {
  background: var(--color-4);
  color: var(--color-1);
}

a {
  /* transition used for making animation with the hover effect */
  transition: color 0.3s;
}

/* :hover is a pseudo element that allow you to make another style for the element if the user over the mouse on it */

a:hover {
  color: rgb(144, 238, 144);
}


/* styling the header for every page */

.header {
  /* i used flex to make it on one line */
  display: flex;
  align-items: center;
}

.header_link {
  /* i used calc() function to make every element take 1/3 of the width of the header completely  */
  width: calc(100% / 3);
  font-family: "NewRocker";
}

.header_title {
  text-align: center;
  width: calc(100% / 3);
}

.search_bar {
  display: flex;
  justify-content: right;
  align-items: center;
  border-radius: 5px;
  width: calc(100% / 3);
}

.search_input {
  width: 60%;
  padding: 10px;
  background: var(--color-3);
  border-radius: 5px 0 0 5px;
  outline: none;
  caret-color: rgb(144, 238, 144);
  transition: 0.5s;
}


/* :focus is another pseudo element that allow you change the element style when the user focus on the element (click on it or using or typing it like the input element) */

.search_input:focus {
  width: 90%;
}


/* ::placeholder (the text that shown in the input or textarea before the user start typing in it) is another pseudo element that you can change some style of the placeholder on input element */

.search_input::placeholder {
  color: var(--color-4);
  opacity: 0.7;
}

.search_button {
  width: 10%;
  padding: 10px;
  background: var(--color-2);
  border-radius: 0 5px 5px 0;
}
.search_button > i {
  /* i used the inline-block because some functions in the property transform like rotate or translate does not work for inline elements */
  display: inline-block;
  transition: 0.5s;
  transform: rotate(-22.5deg);
}

.search_button:hover {
  cursor: pointer;
}

.search_button:hover > i {
  transform: rotate(22.5deg);
}


/* @media is a css rule that make you can change the style of the page based on some conditions like width or height of the window or screen */


@media (max-width: 767px) {
  * {
    font-size: 18px;
  }
  .header_link, .search_bar {
    display: none;
  }

  .header_title {
    width: 100%;
  }
  .header {
    justify-content: center;
  }
}